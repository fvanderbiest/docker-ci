# ambassador is required to overcome a fig limitation.
# we need proxy and apache to know each other.
# there is no other way, see https://github.com/docker/fig/issues/666
#~ ambassador:
    #~ image: cpuguy83/docker-grand-ambassador
    #~ volumes:
      #~ - "/var/run/docker.sock:/var/run/docker.sock"
    #~ command: "-name docker_apache_1 -name docker_proxycas_1"

apache:
    build: ./apache
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - ~/docker/volumes/georchestra/apache_logs:/tmp
    links:
        - proxycas
        #~ - "ambassador:proxycas"
        
database:
    build: ./postgresql
    ports:
        - "5432"
    volumes:
        - ~/docker/volumes/georchestra/postgresql_logs:/var/log/postgresql
    # we'll see data volumes later on
    # https://docs.docker.com/userguide/dockervolumes/
    #    - ~/docker/volumes/georchestra/postgresql_etc:/etc/postgresql
    #    - ~/docker/volumes/georchestra/postgresql_data:/var/lib/postgresql

ldap:
    build: ./openldap
    ports:
        - "389"
    # we'll see data volumes later on
    # https://docs.docker.com/userguide/dockervolumes/
    #volumes:
    #    - ~/docker/volumes/georchestra/openldap_data:/etc/ldap/slapd.d

proxycas:
    build: ./proxycas
    privileged: true
    ports:
        - "8180"
    links:
        # this one is required if the proxy's cas client has to connect to vm-georchestra:443
        #- "ambassador:apache"
        - ldap:ldap_host
        - mapfishapp:mapfishapp_host
        - analytics:analytics_host
        - ldapadmin:ldapadmin_host
        - catalogapp:catalogapp_host
        - downloadform:downloadform_host
        - geonetwork:geonetwork_host
        - extractorapp:extractorapp_host
        - geoserver:geoserver_host
        - geowebcache:geowebcache_host
    volumes:
        - ~/docker/volumes/georchestra/proxycas_logs:/tmp

mapfishapp:
    build: ./mapfishapp
    privileged: true
    ports:
        - "8280"
    links:
        - database:postgresql_host
    volumes:
        - ~/docker/volumes/georchestra/mapfishapp_logs:/tmp

geoserver:
    build: ./geoserver
    privileged: true
    ports:
        - "8380"
    volumes:
        - ~/docker/volumes/georchestra/geoserver_logs:/tmp
        
ldapadmin:
    build: ./ldapadmin
    privileged: true
    ports:
        - "8281"
    links:
        - ldap:ldap_host
        - database:postgresql_host
    volumes:
        - ~/docker/volumes/georchestra/ldapadmin_logs:/tmp

catalogapp:
    build: ./catalogapp
    privileged: true
    ports:
        - "8282"
    volumes:
        - ~/docker/volumes/georchestra/catalogapp_logs:/tmp

extractorapp:
    build: ./extractorapp
    privileged: true
    ports:
        - "8283"
    links:
        - database:postgresql_host
    volumes:
        - ~/docker/volumes/georchestra/extractorapp_logs:/tmp

geowebcache:
    build: ./geowebcache
    privileged: true
    ports:
        - "8284"
    volumes:
        - ~/docker/volumes/georchestra/geowebcache_logs:/tmp

downloadform:
    build: ./downloadform
    privileged: true
    ports:
        - "8285"
    links:
        - database:postgresql_host
    volumes:
        - ~/docker/volumes/georchestra/downloadform_logs:/tmp
  
analytics:
    build: ./analytics
    privileged: true
    ports:
        - "8286"
    links:
        - database:postgresql_host
    volumes:
        - ~/docker/volumes/georchestra/analytics_logs:/tmp
        
geonetwork:
    build: ./geonetwork
    privileged: true
    ports:
        - "8287"
    links:
        - database:postgresql_host
        - ldap:ldap_host
    volumes:
        - ~/docker/volumes/georchestra/geonetwork_logs:/tmp